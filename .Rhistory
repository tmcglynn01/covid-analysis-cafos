library(tidyverse)
cafo <- read_csv('data/RAW/cafo_the_data_for_a_cause_challenge.csv')
POINT(0, 0)
drop_cols <- c('uid', 'source', 'geo_provider', 'location')
library(forcats)
vignette('forcats')
cafo %>%
count(c(permit, permit_status), sort = TRUE)
cafo %>% count(permit, sort = TRUE)
cafo %>% count(permit_status, sort = TRUE)
cafo %>% count(site_name, sort = TRUE)
drop_cols <- c('permit_number', 'source', 'geo_provider', 'location', 'permit',
'permit_status', 'permit_issue_date', 'uid')
cafo <- df %>% select(-!!drop_cols)
cafo <- df %>% select(!!drop_cols)
cafo <- df %>% select(-drop_cols)
library(tidyverse)
library(forcats)
cafo <- df %>% select(-one_of(drop_cols))
library(tidyverse)
library(forcats)
df <- read_csv('data/RAW/cafo_the_data_for_a_cause_challenge.csv')
df %>% count(permit, sort = TRUE)
df %>% count(permit_status, sort = TRUE)
df %>% count(site_name, sort = TRUE)
drop_cols <- c('permit_number', 'source', 'geo_provider', 'location', 'permit',
'permit_status', 'permit_issue_date', 'uid')
cafo <- df %>% select(-one_of(drop_cols))
library(tidyverse)
library(forcats)
df <- read_csv('data/RAW/cafo_the_data_for_a_cause_challenge.csv')
df %>% count(permit, sort = TRUE)
df %>% count(permit_status, sort = TRUE)
df %>% count(site_name, sort = TRUE)
drop_cols <- c('permit_number', 'source', 'geo_provider', 'location', 'permit',
'permit_status', 'permit_issue_date', 'uid')
cafo <- df %>% select(-!!drop_cols)
cafo %>% mutate(across(!!factor_cols, as.factor))
factor_cols <- c('site_name', 'site_state', 'animal_type')
cafo %>% mutate(across(!!factor_cols, as.factor))
df %>% count(animal_type, sort = TRUE)
df$animal_type <- 'chicken'
drop_cols <- c('permit_number', 'source', 'geo_provider', 'location', 'permit',
'permit_status', 'permit_issue_date', 'uid')
cafo <- df %>% select(-!!drop_cols)
factor_cols <- c('site_name', 'site_state', 'animal_type')
df %>% count(site_state)
df %>% count(site_state, sort = TRUE)
drop_cols <- c('permit_number', 'source', 'geo_provider', 'location', 'permit',
'permit_status', 'permit_issue_date', 'uid', 'county')
df <- read_csv('data/RAW/cafo_the_data_for_a_cause_challenge.csv')
df %>% count(permit, sort = TRUE)
df %>% count(permit_status, sort = TRUE)
df %>% count(site_name, sort = TRUE)
df %>% count(animal_type, sort = TRUE)
df %>% count(site_state, sort = TRUE)
df$animal_type <- 'chicken'
drop_cols <- c('permit_number', 'source', 'geo_provider', 'location', 'permit',
'permit_status', 'permit_issue_date', 'uid', 'county')
cafo <- df %>% select(-!!drop_cols)
factor_cols <- c('site_name', 'site_state')
cafo <- cafo %>% mutate(across(!!factor_cols, as.factor)) %>%
cafo <- cafo %>% mutate(across(!!factor_cols, as.factor))
df <- read_csv('data/RAW/cafo_the_data_for_a_cause_challenge.csv')
df %>% count(permit, sort = TRUE)
df %>% count(permit_status, sort = TRUE)
df %>% count(site_name, sort = TRUE)
df %>% count(animal_type, sort = TRUE)
df %>% count(site_state, sort = TRUE)
df$animal_type <- 'chicken'
drop_cols <- c('permit_number', 'source', 'geo_provider', 'location', 'permit',
'permit_status', 'permit_issue_date', 'uid', 'site_county')
cafo <- df %>% select(-!!drop_cols)
factor_cols <- c('site_name', 'site_state', 'site_city', 'site_zip_code')
cafo <- cafo %>% mutate(across(!!factor_cols, as.factor))
summary(cafo$total_no_of_animals)
cafo %>% count(total_no_of_animal_units, sort = TRUE)
cafo %>% count(total_no_of_animal_units, sort = TRUE)
cafo %>% count(is.na(total_no_of_animal_units), sort = TRUE)
cafo %>% count(is.na(total_no_of_animal_units), sort = TRUE)
?read_excel
library(readxl)
df <- read_excel('data/RAW/fda-inspections.xlsx')
colnames(df)
df %>%
select(1:6, 13) %>%
distinct(1) %>%
rename(fei_num = 1, name = 2, city = 3, state = 4, zip = 5, country = 6,
prod_type = 7)
df %>%
select(1:6, 13) %>%
group_by(1) %>%
rename(fei_num = 1, name = 2, city = 3, state = 4, zip = 5, country = 6,
prod_type = 7) %>%
summarise(1:7)
df %>%
select(1:6, 13) %>%
group_by(1) %>%
rename(fei_num = 1, name = 2, city = 3, state = 4, zip = 5, country = 6,
prod_type = 7) %>%
summarise()
df %>%
select(1:6, 13) %>%
group_by(1) %>%
rename(fei_num = 1, name = 2, city = 3, state = 4, zip = 5, country = 6,
prod_type = 7) %>%
summarise()
df %>%
select(1:6, 13) %>%
group_by(1)
rename(fei_num = 1, name = 2, city = 3, state = 4, zip = 5, country = 6,
prod_type = 7)
df %>%
select(1:6, 13) %>%
group_by(1) %>%
rename(fei_num = 1, name = 2, city = 3, state = 4, zip = 5, country = 6,
prod_type = 7)
df %>%
select(1:6, 13) %>%
group_by(1) %>%
rename(fei_num = 1, name = 2, city = 3, state = 4, zip = 5, country = 6,
prod_type = 7)
df %>%
select(1:6, 13) %>%
group_by(`FEI Number`) %>%
rename(fei_num = 1, name = 2, city = 3, state = 4, zip = 5, country = 6,
prod_type = 7)
df %>%
select(1:6, 13) %>%
group_by(`FEI Number`) %>%
rename(fei_num = 1, name = 2, city = 3, state = 4, zip = 5, country = 6,
prod_type = 7) %>%
distinct(fei_num, .keep_all = TRUE)
df %>%
select(1:6, 13) %>%
rename(fei_num = 1, name = 2, city = 3, state = 4, zip = 5, country = 6,
prod_type = 7) %>%
distinct(fei_num, .keep_all = TRUE)
fda_facilities <- df %>%
select(1:6, 13) %>%
rename(fei_num = 1, name = 2, city = 3, state = 4, zip = 5, country = 6,
prod_type = 7) %>%
distinct(fei_num, .keep_all = TRUE)
fda_facilities %>% count(country, sort = TRUE)
fda_facilities <- filter(fda_facilities, country == 'United States')
fda_facilities %>% count(prod_type)
fda_facilities <- filter(fda_facilities, prod_type == 'Food/Cosmetics')
fda_facilities %>% count(prod_type)
drop_cols <- c('prod_type', 'country')
fda_facilities <- select(fda_facilities, -!!drop_cols)
factor_cols <- c('city', 'state', 'zip')
fda_facilities <- mutate(fda_facilities, across(!!factor_cols, is.factor))
df <- read_excel('data/RAW/fda-inspections.xlsx')
fda_facilities <- df %>%
select(1:6, 13) %>%
rename(fei_num = 1, name = 2, city = 3, state = 4, zip = 5, country = 6,
prod_type = 7) %>%
distinct(fei_num, .keep_all = TRUE)
fda_facilities %>% count(country, sort = TRUE)
fda_facilities <- filter(fda_facilities, country == 'United States')
fda_facilities %>% count(prod_type)
fda_facilities <- filter(fda_facilities, prod_type == 'Food/Cosmetics')
drop_cols <- c('prod_type', 'country')
fda_facilities <- select(fda_facilities, -!!drop_cols)
factor_cols <- c('city', 'state', 'zip')
fda_facilities <- mutate(fda_facilities, across(!!factor_cols, as.factor))
df <- read_excel('data/RAW/fda-inspections.xlsx')
fda_facilities <- df %>%
select(1:6, 13) %>%
rename(fei_num = 1, name = 2, city = 3, state = 4, zip = 5, country = 6,
prod_type = 7) %>%
distinct(fei_num, .keep_all = TRUE)
fda_facilities %>% count(country, sort = TRUE)
fda_facilities <- filter(fda_facilities, country == 'United States')
fda_facilities %>% count(prod_type)
fda_facilities <- filter(fda_facilities, prod_type == 'Food/Cosmetics')
drop_cols <- c('prod_type', 'country')
fda_facilities <- select(fda_facilities, -!!drop_cols)
factor_cols <- c('city', 'state')
fda_facilities <- mutate(fda_facilities, across(!!factor_cols, as.factor))
fda_facilities %>%
mutate(fei_num = as.integer(fei_num)) %>%
mutate(across(2:4), str_to_lower)
fda_facilities %>%
mutate(across(2:4), str_to_lower)
df <- read_excel('data/RAW/fda-inspections.xlsx')
fda_facilities <- df %>%
select(1:6, 13) %>%
rename(fei_num = 1, name = 2, city = 3, state = 4, zip = 5, country = 6,
prod_type = 7) %>%
distinct(fei_num, .keep_all = TRUE)
fda_facilities %>% count(country, sort = TRUE)
fda_facilities <- filter(fda_facilities, country == 'United States')
fda_facilities %>% count(prod_type)
fda_facilities <- filter(fda_facilities, prod_type == 'Food/Cosmetics')
drop_cols <- c('prod_type', 'country')
fda_facilities <- select(fda_facilities, -!!drop_cols)
fda_facilities %>% mutate(across(2:4), str_to_lower)
fda_facilities %>% mutate(across(where(is.character), str_to_lower))
fda_facilities %>%
mutate(across(where(is.character), str_to_lower)) %>%
mutate(name = mapply(str_remove, '[[:punct:]]', name))
mutate(name = str_remove(name, '[[:punct:]]')
fda_facilities %>%
mutate(across(where(is.character), str_to_lower)) %>%
mutate(name = str_remove(name, '[[:punct:]]'))
fda_facilities %>%
mutate(across(where(is.character), str_to_lower)) %>%
mutate(name = str_remove(name, '[[:punct:]]'))
fda_facilities %>%
mutate(across(where(is.character), str_to_lower)) %>%
mutate(name = str_remove_all(name, '[[:punct:]]'))
fda_facilities <- fda_facilities %>%
mutate(across(where(is.character), str_to_lower)) %>%
mutate(name = str_remove_all(name, '[[:punct:]]')) %>%
# Factor city and state
mutate(across(!!factor_cols, as.factor))
dim(fda_facilities)
install.packages('tabulizer', dependencies = )
install.packages('tabulizer', dependencies = TRUE)
library(tabulizer)
install.packages('tabulizer', dependencies = TRUE)
library(tabulizer)
vignette('tabulizer')
# LIST OF PLANTS APPROVED TO RECEIVE IMMEDIATE SLAUGHTER ANIMALS
f <- system.file('data/RAW/slaughter_list.pdf', package = "tabulizer")
tab <- extract_tables(f, pages = 1)
# LIST OF PLANTS APPROVED TO RECEIVE IMMEDIATE SLAUGHTER ANIMALS
f <- system.file('data', 'RAW', 'slaughter_list.pdf', package = "tabulizer")
tab <- extract_tables(f, pages = 1)
# LIST OF PLANTS APPROVED TO RECEIVE IMMEDIATE SLAUGHTER ANIMALS
f <- system.file('data/RAW/slaughter_list.pdf', package = "tabulizer")
tab <- extract_tables(f)
# LIST OF PLANTS APPROVED TO RECEIVE IMMEDIATE SLAUGHTER ANIMALS
f <- system.file('~/data/RAW/slaughter_list.pdf', package = "tabulizer")
tab <- extract_tables(f)
file.exists('data/RAW/slaughter_list.pdf')
tab <- extract_tables(f, pages = 2:15)
f
# LIST OF PLANTS APPROVED TO RECEIVE IMMEDIATE SLAUGHTER ANIMALS
f <- system.file('data/RAW/slaughter_list.pdf')
f
tab <- extract_tables(f, pages = 2:15)
library(rJava)
# LIST OF PLANTS APPROVED TO RECEIVE IMMEDIATE SLAUGHTER ANIMALS
f <- system.file('data/RAW/slaughter_list.pdf')
tab <- extract_tables(f, pages = 2:15)
# LIST OF PLANTS APPROVED TO RECEIVE IMMEDIATE SLAUGHTER ANIMALS
extract_tables(
file = 'data/RAW/slaughter_list.pdf',
method = 'decide',
output = tibble
)
# LIST OF PLANTS APPROVED TO RECEIVE IMMEDIATE SLAUGHTER ANIMALS
extract_tables(
file = 'data/RAW/slaughter_list.pdf',
method = 'decide')
# LIST OF PLANTS APPROVED TO RECEIVE IMMEDIATE SLAUGHTER ANIMALS
pdf_extract <- extract_tables('data/RAW/slaughter_list.pdf')
as_tibble(pdf_extract)
head(pdf_extract)
head(pdf_extract) %>% View
as_tibble(pdf_extract, .name_repair = c('org', 'inspection', 'animal', 'fed_num',
'state_num', 'canada'))
as_tibble(pdf_extract, .name_repair = c('orgs', 'inspection', 'animal', 'fed_num',
'state_num', 'canada'))
as_tibble(pdf_extract)
as_tibble(pdf_extract) %>% pluck(1)
pdf_extract %>% pluck(1)
as_tibble(pdf_extract, .name_repair = make.names(c('test', 'test2')))
as_tibble(pdf_extract, .name_repair = 'minimal')
# LIST OF PLANTS APPROVED TO RECEIVE IMMEDIATE SLAUGHTER ANIMALS
pdf_extract <- extract_tables('data/RAW/slaughter_list.pdf', output = 'tibble')
# LIST OF PLANTS APPROVED TO RECEIVE IMMEDIATE SLAUGHTER ANIMALS
pdf_extract <- extract_tables('data/RAW/slaughter_list.pdf', output = 'data.frame')
pdf_extract
